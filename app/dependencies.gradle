android {
    compileSdk libs.versions.compileSdk.get().toInteger()
    defaultConfig {
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
//    buildTypes {
//        debug {
//            //启用资源压缩
//            shrinkResources true
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
//        release {
//            //启用资源压缩
//            shrinkResources true
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
//    }
    buildFeatures {
        buildConfig = true
        viewBinding = true
        dataBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    kapt {
        correctErrorTypes true
    }
}

//apply {
//    plugin("kotlin-kapt")
//    plugin("com.google.devtools.ksp")
//}

dependencies {
    //圆圈指示器
    implementation libs.circleindicator
    implementation libs.hilt.android
    kapt libs.hilt.compiler
    // For instrumentation tests
    androidTestImplementation libs.hilt.android.testing
    kaptAndroidTest libs.hilt.compiler
    // For local unit tests
    testImplementation libs.hilt.android.testing
    kaptTest libs.hilt.compiler
}

//room
dependencies {
    implementation libs.androidx.room.runtime
    //java注解
//    annotationProcessor "androidx.room:room-compiler:2.5.0"
    //kotlin 注解
    implementation libs.androidx.room.ktx
    ksp libs.androidx.room.compiler
    // optional - Test helpers
    testImplementation libs.androidx.room.testing
    // optional - Paging 3 Integration
    //数据分页
    implementation libs.androidx.room.paging
}

//navigation
dependencies {
    //navigation  Kotlin
    // Kotlin
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx
    // Feature module Support
    implementation libs.androidx.navigation.dynamic.features.fragment
    // Testing Navigation
    androidTestImplementation libs.androidx.navigation.testing

    // Java language implementation
//    implementation "androidx.navigation:navigation-fragment:2.7.5"
//    implementation "androidx.navigation:navigation-ui:2.7.5"

    // Jetpack Compose Integration
//    implementation "androidx.navigation:navigation-compose:2.7.5"
}

//tools 第三方框架
dependencies {
    //MPAndroidChart 图标库
//    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    //adapter
    implementation libs.baserecycler
//    implementation(libs.XUI)
    implementation libs.xui
    //表示将第三方库迁移到 AndroidX
    //android.enableJetifier = true
    // Shape 框架：https://github.com/getActivity/ShapeView
    implementation(libs.shapeView)
    //lottie
    implementation libs.lottie
    //glide
    implementation(libs.glide)
    //exoplayer
    implementation libs.exoplayer.core
}

//tools
dependencies {
    implementation libs.androidx.lifecycle.livedata.ktx
    //tools
    //activity 快速创建ViewModel
    dependencies {
        // Java language implementation
        implementation libs.androidx.activity
        // Kotlin
        implementation libs.androidx.activity.ktx
        implementation libs.androidx.fragment.ktx
    }
    //retrofit
    dependencies {
        implementation libs.retrofit
        //gson转换器
        implementation libs.gson
        implementation libs.converter.gson
    }
    // 日志调试框架：https://github.com/getActivity/Logcat
    //android.enableJetifier = true
//    debugImplementation 'com.github.getActivity:Logcat:11.8'
    //utilcodex
    implementation(libs.utilcodex)
}

//init
dependencies {
    implementation libs.auto.value.annotations
    annotationProcessor libs.auto.value

    implementation libs.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}

//compose
dependencies {
    def composeBom = platform(libs.androidx.compose.bom)
    implementation(composeBom)
    implementation libs.androidx.material3
    androidTestImplementation(composeBom)
    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'
    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
}